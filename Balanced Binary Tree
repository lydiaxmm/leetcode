Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. 

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
        return detBal(root)>=0?true:false;
    }
    public int detBal(TreeNode root)
    {
        if(root==null) return 0;
        else
        {
            int left=detBal(root.left);
            int right=detBal(root.right);
            if(left<0||right<0||Math.abs(left-right)>1) return -1;
            return 1+Math.max(left,right);
        }
    }
}
