//Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.
//For example,
//Given 1->2->3->3->4->4->5, return 1->2->5.
//Given 1->1->1->2->3, return 2->3. 
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null||head.next==null) return head;
        ListNode preHead=new ListNode(0);
        ListNode prev=preHead;
        preHead.next=head;
        ListNode p=head;
        while(p!=null&&p.next!=null)
        {
            if(p.val==p.next.val)
            {
                while(p.next!=null&&p.val==p.next.val) p=p.next;
                prev.next=p.next;
            }
            else
            {
                prev=p;
            }
            p=p.next;
        }
        return preHead.next;
    }
}
