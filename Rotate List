Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        if(head==null||head.next==null) return head;
        ListNode slow=head,fast=head;
        while(n>0)
        {
            fast=fast.next;
            n--;
            if(fast==null) fast=head;
        }
        if(fast==slow) return slow;
        while(fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next;
        }
        ListNode start=slow.next;
        fast.next=head;
        slow.next=null;
        return start;
    }
}
